load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "roleserve",
    srcs = [
        "roleserve.go",
        "value_bootstrapdata.go",
        "value_clustermembership.go",
        "value_kubernetes.go",
        "value_node.go",
        "worker_clusternet.go",
        "worker_controlplane.go",
        "worker_heartbeat.go",
        "worker_hostsfile.go",
        "worker_kubernetes.go",
        "worker_nodemgmt.go",
        "worker_rolefetch.go",
        "worker_statuspush.go",
    ],
    importpath = "source.monogon.dev/metropolis/node/core/roleserve",
    visibility = ["//visibility:public"],
    deps = [
        "//metropolis/node",
        "//metropolis/node/core/clusternet",
        "//metropolis/node/core/consensus",
        "//metropolis/node/core/curator",
        "//metropolis/node/core/curator/proto/api",
        "//metropolis/node/core/identity",
        "//metropolis/node/core/localstorage",
        "//metropolis/node/core/mgmt",
        "//metropolis/node/core/network",
        "//metropolis/node/core/network/hostsfile",
        "//metropolis/node/core/rpc",
        "//metropolis/node/core/rpc/resolver",
        "//metropolis/node/kubernetes",
        "//metropolis/node/kubernetes/containerd",
        "//metropolis/node/kubernetes/pki",
        "//metropolis/pkg/event",
        "//metropolis/pkg/event/memory",
        "//metropolis/pkg/logtree",
        "//metropolis/pkg/pki",
        "//metropolis/pkg/supervisor",
        "//metropolis/proto/common",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_protobuf//encoding/prototext",
    ],
)

go_test(
    name = "roleserve_test",
    srcs = ["worker_statuspush_test.go"],
    embed = [":roleserve"],
    deps = [
        "//metropolis/node",
        "//metropolis/node/core/curator/proto/api",
        "//metropolis/pkg/supervisor",
        "//metropolis/proto/common",
        "@com_github_cenkalti_backoff_v4//:backoff",
        "@com_github_google_go_cmp//cmp",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_grpc//test/bufconn",
        "@org_golang_google_protobuf//testing/protocmp",
    ],
)
